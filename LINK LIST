#include<iostream>
using namespace std;
class Node
{
    public:
    int data;
    Node*next;
    // constructor
    Node(int val)
    {
        this ->data=val;
        this->next=NULL;
        
    }
    // destructor
    ~Node()
    {
        int value=this->data;
        if (this->next!=NULL)
        {
            delete next;
            this ->next=NULL;
            
            
        }cout<<"memory is free for node with data"<<value<<endl;
        
    }
};

void InsertAtHead(Node *&head,int d)
{
    // new node create
    Node*temp=new Node(d);
    
    temp->next=head;
    head =temp;
    
}
void InsertAtTail(Node*&tail,int d)
{
    // new node creat
    Node*temp=new Node(d);
    tail->next=temp;
    tail=temp;
}
void print (Node *&head)
{
    Node*temp=head;
    
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
        
    }cout<<endl;
    
}


void deletNode(int position,Node* &head)
{
    // deleting 1st or start node
    if (position==1)
    {
        Node*temp=head;
        
        
        head=head->next;
        // memory free start node ki
        temp->next=NULL;
        
        delete temp;
        
        
    }
    else
    {
        // deleting any middel and last node
        Node* curr=head;
        Node*prev=NULL;
        
        int cnt=1;
        while(cnt<position)
        {
            prev=curr;
            curr=curr->next;
            cnt++;
             
        }
        
        prev->next=curr ->next;
        curr->next;
        
        delete curr;
        
    }
}


// deletion

 
void (InsertAtPosition (Node* &tail,Node* &head,int position ,int d))
{
    // inseeart at start
    
    if (position==1)
    {
        InsertAtHead(head,d);
        return ;
    }
    Node *temp=head;
    int cnt=1;
    while(cnt<position-1)
    {
        temp=temp->next;
        cnt++;
        
    }
    if (temp->next==NULL)
    {
        InsertAtTail(tail,d);
        return ;
    }
    // creating a new node for d
    Node* nodeToInsert=new Node(d);
    
    
    nodeToInsert->next=temp->next;
    
    temp->next=nodeToInsert;
    
    
}
int main()
{
    // created a new Node 
    Node* node1=new Node(10);
    // cout<<node1->data <<endl;
    // cout<<node1->next<<endl;
    
    
// head pointed to node1  
Node *head=node1;
Node *tail=node1;
print(head);
    InsertAtTail(tail,12);
    print (tail);
    
    InsertAtPosition(tail,head,1,17);
    print(head);
    cout<<"head =="<<head->data<<endl;
    cout<<"tail =="<<tail->data<<endl;
    
    deletNode(1,head);
    print (head);
    
    
}

