class Solution 
{
    private :
    bool knows(vector<vector<int> >& M,int a,int b,int n )
    {
        if (M[a][b]==1)
        return true;
        else
        return false; 
    }
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        stack<int>s;
    // /step1:push all element in stack
    
    for (int i=0;i<n;i++)
    {
        s.push(i);
    }
    // step2 
    while(s.size()>1)
    {
        int a=s.top();
        s.pop();
        
        int b=s.top();
        
        s.pop();
        if (knows(M,a,b,n))
        {
            s.push(b);
        }
        else
        {
            s.push(a);
        }
        
        
    }
    int ans=s.top();
    // step3 :single elemet is stack is potential celeb
    int candidate=s.top();
    bool rowcheck=false;
    int zerocount=0;
    
    for (int i=0;i<n;i++)
    {
        if (M[candidate][i]==0)
        zerocount++;
    }
    
    // all zeroes
    
    if (zerocount==n)
    {
        rowcheck=true;
    }
    
    
    // column check
    bool colcheck=false;
    int colcount =0;
    for (int i=0;i<n;i++)
    {
        if (M[i][candidate]==0)
        colcount++;
    }
    
    // removing diagol=nal condition
    if (colcount ==n-1)
    {
        colcheck=true;
    }
    if (rowcheck==true && colcheck==true){
    return ans ;
        
    }
    
    else
    {
    return -1;
        
    }
        
    
}

};
