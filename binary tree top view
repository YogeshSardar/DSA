class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        vector <int >ans;
        if (root==NULL)
        {
            return ans;
        }
      
        
        // horizontal distance road ki mapping ka 
        
        
        map<int,int>topNode;          //int-for hd and next int for root ka data 
        queue<pair<Node*,int>>q;     //int is for hd
        
        q.push(make_pair(root,0));
        while(!q.empty())
        {
            // front me jobhi value hai wo nikalo and store to temp
            
            pair<Node*,int>temp=q.front();
            q.pop();
            
            Node* frontNode=temp.first;
            int hd=temp.second;
            
            // if one value is present for HD ,then do nothing
            
            if (topNode.find(hd)==topNode.end())
            topNode[hd]=frontNode->data;
            
            
            if (frontNode->left){
            q.push(make_pair(frontNode->left,hd-1));
            }
            
             if (frontNode->right){
            q.push(make_pair(frontNode->right,hd+1));
             }
            //  i here is <int ,int > vector data type
             
        }
         for (auto i:topNode)
             {
                 ans.push_back(i.second);
             }    
        
        
        
        return ans;
        
    }
    

};
