#include<iostream>
using namespace std;


int partision(int arr[],int s,int e)
{
    int pivot=arr[s];
    
    int cnt=0;
    
    for (int i=s+1;i<=e;i++){
    if(arr[i]<=pivot)
    {
        cnt++;
    }
}

//place pivot at right position 
int pivotIndex =s+cnt;
swap(arr[pivotIndex],arr[s]);


// left and right wala patr sambhal lete hai
int i=s;
int j=e;
while (i<pivotIndex&&j>pivotIndex)
{
    
    // if element is small tha pivot and is on left only
    

    while(arr[i]<pivot){
        i++;
    }
    while(arr[j]>pivot)
    {
        j--;
    }
    if (i<pivotIndex && j<pivotIndex)
    {
        swap(arr[i++],arr[j--]);
    }
}return pivotIndex;
}

void quicksort(int arr[],int s ,int e)
{
// base case
if (s>e)
return ;


// partision kare kare it will return mid index
int p=partision(arr,s,e);

// left part sort karo

quicksort(arr,s,p-1);
// right wala part sort karo

quicksort(arr,p+1,e);

}
int main()
{
    int arr[5]={1,4,2,44,10};
    int n=5;
    
    quicksort(arr,0,n-1);
    for (int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }cout<<endl;
    
}
